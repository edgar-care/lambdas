openapi: 3.0.0
info:
  title: edgar.care API
  description: This is the edgar.care API reference.
  version: 0.0.1

# ---------------------------------------------------------------------------- #
#                                     Paths                                    #
# ---------------------------------------------------------------------------- #

paths:

# ------------------------------ Authentication ------------------------------ #

  /auth/d/login:
    post:
      summary: Login as a Doctor entity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Doctor's email address
                password:
                  type: string
                  description: Doctor's password
      responses:
        "200":
          description: The user is now logged as a Doctor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token for the authenticated doctor.
        "400":
          description: The provided credentials are invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.

  /auth/d/register:
    post:
      summary: Register as a new Doctor entity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Doctor's email address
                password:
                  type: string
                  description: Doctor's password
                name:
                  type: string
                  description: Doctor's name
                last_name:
                  type: string
                  description: Doctor's last name
                address:
                  type: string
                  description: Doctor's address
      responses:
        "200":
          description: The new Doctor entity has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token for the authenticated doctor.
        "400":
          description: The provided credentials are invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.

  /auth/p/login:
    post:
      summary: Login as a Patient entity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Patient's email address
                password:
                  type: string
                  description: Patient's password
      responses:
        "200":
          description: The user is now logged in as a Patient.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token for the authenticated patient.
        "400":
          description: The provided credentials are invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Error message.

  /auth/p/register:
    post:
      summary: Register as a Patient entity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Patient's email address
                password:
                  type: string
                  description: Patient's password
                name:
                  type: string
                  description: Patient's name
                last_name:
                  type: string
                  description: Patient's last name
                age:
                  type: integer
                  description: Patient's age
                sex:
                  type: string
                  enum: [ "M", "F" ]
                  description: Patient's sex, either M or F
                height:
                  type: integer
                  description: Patient's height
                weight:
                  type: integer
                  description: Patient's weight
      responses:
        "200":
          description: The new Patient entity has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token for the authenticated patient.
        "400":
          description: The provided credentials are invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.

# ---------------------------------- Patient --------------------------------- #

  /patient:
    get:
      security:
        - BearerAuth: []
      summary: Get the information of the current Patient entity.
      responses:
        "200":
          description: The current Patient entity has been retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"


# ---------------------------------- Doctor ---------------------------------- #

  /doctor:
    get:
      security:
        - BearerAuth: []
      summary: Get the information of the current Doctor entity.
      responses:
        "200":
          description: The current Doctor entity has been retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doctor"


# ------------------------------------ NLP ----------------------------------- #

  /nlp:
    post:
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                symptoms:
                  type: array
                  items:
                    type: string
                  description: The symptoms concerned by the input.
                input:
                  type: string
                  description: The input of the user.
      summary: Parse the input from the user to a valid ExamContext.
      responses:
        "200":
          description: The input is valid and has been treated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    $ref: "#/components/schemas/ExamContext"
                    description: A brand new context containing new symptoms parsed from the input.


# ----------------------------------- EXAM ----------------------------------- #

  /exam:
    post:
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: "#/components/schemas/ExamContext"
                  description: The context with new information from the nlp endpoint.
      summary: "Processes a context and returns the next question to ask the user if needed."
      responses:
        "200":
          description: The context is valid and has been treated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    $ref: "#/components/schemas/ExamContext"
                    description: The context after adding the new symptoms to it.
                  question:
                    type: string
                    description: The next question to ask the user.
                  symptoms:
                    type: array
                    items:
                      type: string
                    description: The symptoms related to the given question.
                  done:
                    type: boolean
                    description: Whether the context has aggregated enough information or not.

# ----------------------------------- DIAGNOSTIC ----------------------------------- #

  /diagnostic/initiate:
    post:
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: "#/components/schemas/DiagnosticInitiate"
      summary: "Initiate a diagnostic session"
      responses:
        "200":
          description: The session has been created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string

  /diagnostic/diagnose:
    post:
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: "#/components/schemas/DiagnosticDiagnose"
      summary: "Diagnose"
      responses:
        "200":
          description: The diagnostic was successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  done:
                    type: string
                  question:
                    type: string
    
# ----------------------------------- Onboading ----------------------------------- #

  /onboarding/infos:
    post:
      summary: Add information about the patient.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Patient's name
                Surname:
                  type: string
                  description: Patient's surname
                age:
                  type: integer
                  description: Patient's age
                sex:
                  type: string
                  enum: [ "M", "F" ]
                  description: Patient's sex, either M or F
                height:
                  type: integer
                  description: Patient's height
                weight:
                  type: integer
                  description: Patient's weight
      responses:
        "200":
          description: all information about the patient is confirm.
          content:
            application/json:
              schema:
                type: object
 
        "400":
          description: Missing information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.

  /onboarding/health:
    post:
      summary: Add information health about the patient.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patientallergies:
                  type: string
                  description: Patient's patientallergies
                Patientsillness:
                  type: string
                  description: Patient's patientsillness

      responses:
        "200":
          description: all information health about the patient is confirm.
          content:
            application/json:
              schema:
                type: object
 
        "400":
          description: error during the operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.

# ----------------------------------- Pushnotification ----------------------------------- #


# ---------------------------------------------------------------------------- #
#                                  Components                                  #
# ---------------------------------------------------------------------------- #


components:

# --------------------------------- Security --------------------------------- #

  securitySchemes:
      BearerAuth:
        type: http
        scheme: bearer

# ---------------------------------- Schemas --------------------------------- #

  schemas:
    Patient:
      type: object
      properties:
        id:
          type: string
          description: ID of the patient.
        name:
          type: string
          description: Name of the patient.
        last_name:
          type: string
          description: Last name of the patient.
        email:
          type: string
          description: Email address of the patient.
        age:
          type: integer
          description: Age of the patient.
        sex:
          type: string
          enum: [ "M", "F" ]
        height:
          type: integer
          description: Height of the patient.
        weight:
          type: integer
          description: Weight of the patient.


    Doctor:
      type: object
      properties:
        id:
          type: string
          description: ID of the doctor.
        name:
          type: string
          description: Name of the doctor.
        last_name:
          type: string
          description: Last name of the doctor.
        email:
          type: string
          description: Email address of the doctor.
        address:
          type: string
          description: Address of the doctor.

    ExamContextItem:
      type: object
      properties:
        symptom:
          type: string
          description: The symptom described by the object.
        present:
          type: boolean
          description: Whether the symptom is present or not.

    ExamContext:
      type: array
      items:
        $ref: "#/components/schemas/ExamContextItem"

    DiagnosticInitiate:
      type: object
      properties:
        age: 
          type: integer
        height: 
          type: integer
        weight: 
          type: integer
        sex: 
          type: string
        enum:
          type: string
          enum: [ "M", "F" ]

    DiagnosticDiagnose:
      type: object
      properties:
        id:
          type: string
        sentence:
          type: string

    OnboardingInfo:
      type: object
      properties:
        id:
          type: string
          description: ID of patient.
        name:
          type: string
          description: Name of the patient.
        surname:
          type: string
          description: Surname of the patient.
        age:
          type: string
          description: age of the patient
        sexe:
          type: string
          description: sex of the patient
        height:
          type: string
          description: height of the patient
        weight:
          type: string
          description: weight of the patient

    OnboardingHealth:
      type: object
      properties:
        id:
          type: string
          description: ID of patient.
        patientsillness:
          type: string
          description: patientsillness of the patient.
        patientallergies:
          type: string
          description: patientallergies of the patient.
    
    Pushnotification:
      type: object
      properties:
        token:
          type: string
          description: token of device.
        title:
          type: string
          description: title for the notification.
        message:
          type: string
          description: notification messages.