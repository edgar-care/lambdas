openapi: 3.0.0
info:
  title: edgar.care API
  description: This is the edgar.care API reference.
  version: 0.0.1

# ---------------------------------------------------------------------------- #
#                                     Paths                                    #
# ---------------------------------------------------------------------------- #

paths:

# ------------------------------ Authentication ------------------------------ #

  /auth/d/login:
    post:
      summary: Login as a Doctor entity.
      responses:
        "200":
          description: The user is now logged as a Doctor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token for the authenticated doctor.
        "400":
          description: The provided credentials are invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.

  /auth/d/register:
    post:
      summary: Register as a new Doctor entity.
      responses:
        "200":
          description: The new Doctor entity has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token for the authenticated doctor.
        "400":
          description: The provided credentials are invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.

  /auth/p/login:
    post:
      summary: Login as a Patient entity.
      responses:
        "200":
          description: The user is now logged in as a Patient.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token for the authenticated patient.
        "400":
          description: The provided credentials are invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Error message.

  /auth/p/register:
    post:
      summary: Register as a Patient entity.
      responses:
        "200":
          description: The new Patient entity has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token for the authenticated patient.
        "400":
          description: The provided credentials are invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.

# ---------------------------------- Patient --------------------------------- #

  /patient:
    get:
      summary: Get the information of the current Patient entity.
      responses:
        "200":
          description: The current Patient entity has been retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"



# ---------------------------------------------------------------------------- #
#                                  Components                                  #
# ---------------------------------------------------------------------------- #


components:
  schemas:

# ---------------------------------- Patient Schema --------------------------------- #

    Patient:
      type: object
      properties:
        id:
          type: string
          description: ID of the patient.
        name:
          type: string
          description: Name of the patient.
        last_name:
          type: string
          description: Last name of the patient.
        email:
          type: string
          description: Email address of the patient.
        age:
          type: integer
          description: Age of the patient.
        sex:
          type: string
          enum: [ "M", "F" ]
        height:
          type: integer
          description: Height of the patient.
        weight:
          type: integer
          description: Weight of the patient.

# ---------------------------------- Doctor Schema ---------------------------------- #

    Doctor:
      type: object
      properties:
        id:
          type: string
          description: ID of the doctor.
        name:
          type: string
          description: Name of the doctor.
        last_name:
          type: string
          description: Last name of the doctor.
        email:
          type: string
          description: Email address of the doctor.
